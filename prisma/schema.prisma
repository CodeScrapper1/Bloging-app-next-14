// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Post          Post[]
  Comment       Comment[]
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime @default(now())
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id String @id @default(cuid()) @map("_id")
  slug  String @unique
  title String
  img   String?
  Post  Post[]
}

model Post {
  id        String @id @default(cuid()) @map("_id")
  slug      String @unique
  title     String 
  desc      String
  img       String?
  views     Int   @default(0)
  catSlug   String
  cat       Category @relation(fields:[catSlug],references: [slug])
  userEmail String
  user      User     @relation(fields:[userEmail],references:[email])
  comments  Comment[]
  createdAt DateTime @default(now())
}

model Comment {
  id        String @id @default(cuid()) @map("_id")
  desc      String 
  userEmail String
  user User @relation(fields:[userEmail],references:[email])
  postSlug  String
  post      Post @relation(fields:[postSlug],references:[slug])
}